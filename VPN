#!/bin/bash

if [ $# -ne 2 ]
then
    echo Usage: 1>&2
    echo "  create-vpn-key USER DEVICE" 1>&2
    exit 1
fi

user=$1
device=$2
tmp=/tmp/tmp$$

job=create-key-$(uuidgen)

rm -f ${tmp}

cat >${tmp} <<EOT
apiVersion: batch/v1
kind: Job
metadata:
  name: $job
spec:
  activeDeadlineSeconds: 1800
  template:
    metadata:
      name: credential-mgmt
    spec:
      containers:
      - name: credential-mgmt
        image: gcr.io/trust-networks/credential-mgmt:0.4
        command: ["./create-vpn-key",  "${user}", "${device}"]
        volumeMounts:
        - mountPath: /key
          name: keys
          readOnly: True
        - mountPath: /vpn_ca_cert
          name: vpn-ca-creds
          readOnly: True
        - mountPath: /vpn_ca
          name: vpn-ca-data
        - mountPath: /web_ca_cert
          name: web-ca-creds
          readOnly: True
        - mountPath: /web_ca
          name: web-ca-data
        env:
        - name: CA
          value: /vpn_ca
        - name: CA_CERT
          value: /vpn_ca_cert
      restartPolicy: Never
      volumes:
      - name: keys
        secret:
          secretName: keys
      - name: vpn-ca-creds
        secret:
          secretName: vpn-ca-creds
      - name: vpn-ca-data
        gcePersistentDisk:
          pdName: vpn-ca-data-0000
          fsType: ext4
      - name: web-ca-creds
        secret:
          secretName: web-ca-creds
      - name: web-ca-data
        gcePersistentDisk:
          pdName: ca-0000
          fsType: ext4
EOT

kubectl create -f ${tmp}

pods=$(kubectl get pods  --show-all --selector=job-name=$job --output=jsonpath={.items..metadata.name})

echo Submitted job $job
echo PODS: $pods

